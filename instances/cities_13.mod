
    set I;
param n := card(I);

set SS := 0 .. (2**n - 1);

set POW {k in SS} := {i in I: (k div 2**(i-1)) mod 2 = 1};



set LINKS := {i in I, j in I: i < j};

param cost {LINKS};
var x {LINKS} binary;

minimize TotCost: sum {(i,j) in LINKS} cost[i,j] * x[i,j];

subj to Tour {i in I}: 
   sum {(i,j) in LINKS} x[i,j] + sum {(j,i) in LINKS} x[j,i] = 2;

subj to SubtourElim {k in SS diff {0,2**n-1}}:
   sum {i in POW[k], j in I diff POW[k]: (i,j) in LINKS} x[i,j] +
   sum {i in POW[k], j in I diff POW[k]: (j,i) in LINKS} x[j,i] >= 2;
   


solve;

printf "------------------------------------------------------\n";
printf{i in I, j in I: j>i and x[i,j] == 1} "(%d, %d)\n", i-1, j-1;
printf "Cost: %d\n", sum{i in I, j in I: j > i} x[i,j]*cost[i,j];
printf "------------------------------------------------------\n";

data;

set I := 1 2 3 4 5 6 7 8 9 10 11 12 13;

param cost: 1 2 3 4 5 6 7 8 9 10 11 12 13 :=
	1 . 2451.0 713.0 1018.0 1631.0 1374.0 2408.0 213.0 2571.0 875.0 1420.0 2145.0 1972.0
	2 . . 1745.0 1524.0 831.0 1240.0 959.0 2596.0 403.0 1589.0 1374.0 357.0 579.0
	3 . . . 355.0 920.0 803.0 1737.0 851.0 1858.0 262.0 940.0 1453.0 1260.0
	4 . . . . 700.0 862.0 1395.0 1123.0 1584.0 466.0 1056.0 1280.0 987.0
	5 . . . . . 663.0 1021.0 1769.0 949.0 796.0 879.0 586.0 371.0
	6 . . . . . . 1681.0 1551.0 1765.0 547.0 225.0 887.0 999.0
	7 . . . . . . . 2493.0 678.0 1724.0 1891.0 1114.0 701.0
	8 . . . . . . . . 2699.0 1038.0 1605.0 2300.0 2099.0
	9 . . . . . . . . . 1744.0 1645.0 653.0 600.0
	10 . . . . . . . . . . 679.0 1272.0 1162.0
	11 . . . . . . . . . . . 1017.0 1200.0
	12 . . . . . . . . . . . . 504.0
	13 . . . . . . . . . . . . .;

end;
